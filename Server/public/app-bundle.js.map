{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/modules/home.js","src/modules/list.js","src/resources/index.js","src/resources/data/data-services.js","src/resources/data/todos.js","src/resources/data/users.js","src/resources/elements/flatpickr.js","src/resources/value-converters/completed.js","src/resources/value-converters/date-format.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","Home","users","loginError","message","showLogin","showRegister","user","firstName","lastName","email","password","registerError","save","serverResponse","error","login","sessionStorage","setItem","JSON","stringify","response","navigate","catch","console","log","List","Router","todos","parse","getItem","title","showList","showCompleted","priorities","activate","getUserTodos","_id","logout","removeItem","toggleShowCompleted","createTodo","todoObj","todo","description","dateDue","Date","priority","editTodo","deleteTodo","completeTodo","completed","saveTodo","alert","todoId","filesToUpload","length","uploadFile","changeFiles","Array","push","files","removeFile","index","splice","back","globalResources","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","localStorage","append","method","url","status","get","fetch","json","data","post","content","body","object","put","delete","uploadFiles","ToDos","TODO_SERVICE","todosArray","id","updateArray","i","userId","formData","FormData","forEach","item","Users","USER_SERVICE","FlatPickerCustomElement","Element","defaultBindingMode","twoWay","element","bind","defaultConfig","altInput","altFormat","wrap","_config","Object","assign","onChange","onMonthChange","onYearChange","attached","flatpickr","querySelector","selectedDates","dateStr","instance","value","valueChanged","newDate","undefined","setDate","CompletedValueConverter","toView","array","filter","DateFormatValueConverter","format"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { inject } from 'aurelia-framework';\nimport { AuthorizeStep } from 'aurelia-auth';\n\nexport class App {\n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep);\n\n    config.map([\n      {\n        route: ['', 'home'],\n        moduleId: './modules/home',\n        name: 'Home'\n      },\n      {\n        route: 'list',\n        moduleId: './modules/list',\n        name: 'List',\n        auth: true\n      }\n    ]);\n  }\n}","var authConfig = {\r\n    baseUrl: \"http://localhost:5000/api\",\r\n    loginUrl: '/users/login',\r\n    tokenName: 'token',\r\n    authHeader: 'Authorization',\r\n    authToken: '',\r\n    logoutRedirect: '#/home'\r\n  }\r\n  \r\n  export default authConfig;\r\n  ","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport config from './auth-config';\nimport regeneratorRuntime from 'regenerator-runtime';\nwindow.regeneratorRuntime = regeneratorRuntime;\n\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n      baseConfig.configure(config);\n })\n\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {Users} from '../resources/data/users';\r\nimport {AuthService} from 'aurelia-auth';\r\n\r\n@inject(Router, Users, AuthService)\r\n\r\nexport class Home {\r\n    constructor(router, users, auth){\r\n        this.router = router;\r\n        this.users = users;\r\n        this.auth = auth;\r\n        this.loginError =''\r\n        this.message = '';\r\n        this.showLogin = true;\r\n    }\r\n\r\n    showRegister(){\r\n        this.user = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\"\r\n            \r\n        }\r\n        this.registerError=\"\";\r\n        \r\n        this.showLogin = false;\r\n    }\r\n\r\n    async save() {\r\n              let serverResponse = await this.users.save(this.user);\r\n              if (!serverResponse.error) {\r\n                this.showLogin = true;\r\n              } else {\r\n                this.registerError = \"There was a problem registering the user.\"\r\n              }\r\n        }\r\n        \r\n\r\n        login() {\r\n            return this.auth.login(this.email, this.password)\r\n              .then(response => {\r\n            sessionStorage.setItem(\"user\", JSON.stringify(response.user));\r\n            this.loginError = \"\";\r\n            this.router.navigate('list');\r\n              })\r\n              .catch(error => {\r\n                console.log(error);\r\n                this.loginError = \"Invalid credentials.\";\r\n              });\r\n          };\r\n        \r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {ToDos} from '../resources/data/todos';\r\nimport {AuthService} from 'aurelia-auth';\r\n\r\n@inject(Router, ToDos, AuthService)\r\nexport class List {\r\n\r\n\tconstructor(Router, todos, auth){\r\n\t\t    this.todos = todos;\r\n\t\t    this.auth = auth;\r\n\t\t\tthis.user = JSON.parse(sessionStorage.getItem('user'));\r\n\t\t    this.title = \"Has Things ToDo!\"\r\n\t\t    this.showList = true;\r\n\t\t    this.showCompleted = false;\r\n\t\t    this.priorities = ['Low', 'Medium', 'High', 'Critical'];\r\n\t}\r\n\r\n\r\n\tasync activate() {\r\n\t\tawait this.todos.getUserTodos(this.user._id);\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tsessionStorage.removeItem('user');\r\n\t\tthis.auth.logout();\r\n\t}\r\n\r\n\ttoggleShowCompleted(){\r\n\t\t    this.showCompleted = !this.showCompleted;\r\n\t\t}\r\n\t\t\r\n\tcreateTodo() {\r\n\t\tthis.todoObj = {\r\n\t\t\ttodo: \"\",\r\n\t\t\tdescription: \"\",\r\n\t\t\tdateDue: new Date(),\r\n\t\t\tuser: this.user._id,\r\n\t\t\tpriority: this.priorities[0]\r\n\t\t}\r\n\t\tthis.showList = false;\r\n\t}\r\n\r\n\teditTodo(todo) {\r\n\t\tthis.todoObj = todo;\r\n\t\tthis.showList = false;\r\n\t}\r\n\r\n\tdeleteTodo(todo) {\r\n\t\tthis.todos.deleteTodo(todo._id);\r\n\t}\r\n\r\n\tcompleteTodo(todo){\r\n\t\t    todo.completed = !todo.completed;\r\n\t\t    this.todoObj = todo;\r\n\t\t    this.saveTodo();\r\n\t\t}\r\n\t\t\r\n\r\n\t\tasync saveTodo() {\r\n\t\t\tif (this.todoObj) {\r\n\t\t\t\tlet response = await this.todos.save(this.todoObj);\r\n\t\t\t\tif (response.error) {\r\n\t\t\t\t\talert(\"There was an error creating the ToDo\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\t  var todoId = response._id;\r\n\t\t\t\t\t                if(this.filesToUpload && this.filesToUpload.length){\r\n\t\t\t\t\t                    await this.todos.uploadFile(this.filesToUpload, this.user._id, todoId);\r\n\t\t\t\t\t                    this.filesToUpload = [];\r\n\t\t\t\t\t                }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tthis.showList = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tchangeFiles(){\r\n\t\t\t    this.filesToUpload = new Array(); \r\n\t\t\t    this.filesToUpload.push(this.files[0]);\r\n\t\t\t}\r\n\t\t\tremoveFile(index){\r\n\t\t\t    this.filesToUpload.splice(index,1);\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\r\n\tback(){\r\n\t\tthis.showList=true \r\n\t}\r\n\r\n\r\n\r\n}","export function configure(config) {\n  config.globalResources([\n    './value-converters/date-format',\n    './value-converters/completed',\n    './elements/flatpickr'\n  ]);\n}\n","import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\n@inject(HttpClient)\r\nexport class DataServices {\r\n\r\n    constructor(http) {\r\n        this.httpClient = http;\r\n        this.BASE_URL = \"http://localhost:5000/api/\";\r\n        this.httpClient.configure(config => {\r\n            config\r\n                .withBaseUrl(this.BASE_URL)\r\n                .withDefaults({\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'X-Requested-With': 'Fetch'\r\n                    }\r\n                })\r\n                .withInterceptor({\r\n                    request(request) {\r\n                        var authHeader = 'Bearer ' + localStorage.getItem('aurelia_token')\r\n                        request.headers.append('Authorization', authHeader);\r\n\r\n                        console.log(`Requesting ${request.method} ${request.url}`);\r\n                        return request;\r\n                    },\r\n                    response(response) {\r\n                        console.log(`Received ${response.status} ${response.url}`);\r\n                        return response;\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    get(url) {\r\n        return this.httpClient.fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                return data;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n\r\n    post(content, url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                method: 'post',\r\n                body: json(content)\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n\r\n    put(content, url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                method: 'put',\r\n                body: json(content)\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n\r\n    delete(url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                method: 'delete'\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n    uploadFiles(files, url){\r\n            return this.httpClient\r\n            .fetch(url, {\r\n                method: 'post',\r\n                body: files\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n        }\r\n        \r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { DataServices } from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class ToDos {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.TODO_SERVICE = 'todos';\r\n        this.todosArray = [];\r\n\r\n    }\r\n\r\n    async getUserTodos(id) {\r\n        let response = await this.data.get(this.TODO_SERVICE + \"/user/\" + id);\r\n        if (!response.error && !response.message) {\r\n            this.todosArray = response;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    async save(todo) {\r\n        if (todo) {\r\n            if (!todo._id) {\r\n\r\n                let response = await this.data.post(todo, this.TODO_SERVICE);\r\n                if (!response.error) {\r\n                    this.todosArray.push(response);\r\n                }\r\n                return response;\r\n            } else {\r\n                let response = await this.data.put(todo, this.TODO_SERVICE + \"/\" + todo._id);\r\n                if (!response.error) {\r\n                    this.updateArray(response);\r\n                }\r\n                return response;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    async deleteTodo(id) {\r\n        let response = await this.data.delete(this.TODO_SERVICE + \"/\" + id);\r\n        if (!response.error) {\r\n            for (let i = 0; i < this.todosArray.length; i++) {\r\n                if (this.todosArray[i]._id === id) {\r\n                    this.todosArray.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async uploadFile(files, userId, todoId){\r\n                let formData = new FormData();\r\n                files.forEach((item, index) => {\r\n            formData.append(\"file\" + index, item);\r\n                });\r\n            \r\n            let response = await this.data.uploadFiles(formData, this.TODO_SERVICE + \"/upload/\" + userId + \"/\" + todoId);\r\n            return response;\r\n        }\r\n        \r\n\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class Users {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n\r\n        this.USER_SERVICE = 'users';\r\n    }\r\n\r\n    async save(user) {\r\n        if (user) {\r\n            try {\r\n                let serverResponse = await this.data.post(user, this.USER_SERVICE);\r\n                return serverResponse;\r\n            } catch (error) {\r\n                console.log(error);\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { inject, bindable, bindingMode } from 'aurelia-framework';\r\nimport Flatpickr from 'flatpickr';\r\n\r\n@inject(Element)\r\nexport class FlatPickerCustomElement {\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) value;\r\n\r\n    constructor(element) {\r\n        this.element = element;\r\n    }\r\n    bind() {\r\n        const defaultConfig = {\r\n            altInput: true,\r\n            altFormat: \"F j, Y\",\r\n            wrap: true\r\n        };\r\n        this._config = Object.assign({}, defaultConfig);\r\n        this._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);\r\n    }\r\n\r\n    attached() {\r\n        this.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\r\n    }\r\n    onChange(selectedDates, dateStr, instance) {\r\n        this.value = selectedDates[0]\r\n    }\r\n\r\n    attached() {\r\n        this.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\r\n    }\r\n    onChange(selectedDates, dateStr, instance) {\r\n        this.value = selectedDates[0]\r\n    }\r\n\r\n    valueChanged() {\r\n        if (!this.flatpickr) {\r\n            return;\r\n        }\r\n        if (this.value === this.flatpickr.selectedDates[0]) {\r\n            return;\r\n        }\r\n        let newDate = this.value ? this.value : undefined;\r\n        this.flatpickr.setDate(newDate);\r\n    }\r\n}\r\n\r\n\r\n","export class CompletedValueConverter {\r\n      \r\n       toView(array, value) {\r\n         if(!value){\r\n          return array.filter(item => {\r\n            return !item.completed;\r\n          })\r\n         } else {\r\n           return array;\r\n         }\r\n       }\r\n      }\r\n    ","import moment from 'moment';\r\nexport class DateFormatValueConverter {\r\ntoView(value) {\r\nif(value === undefined || value === null){\r\n\treturn;\r\n    \t\t}\r\n    \r\n    \t\treturn moment(value).format('MMM Do YYYY');\r\n\t}\r\n}\r\n"],"sourceRoot":".."}